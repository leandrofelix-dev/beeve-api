generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubscriptionStatus {
  PENDING
  COMPLETED
  MISSED
}

model Role {
  id          String @id @unique @default(uuid())
  name        String
  description String
  users       User[]

  Permissions    Permission[]
  RolePermission RolePermission[]

  @@map("roles")
}

model Permission {
  id             String           @id @default(uuid())
  description    String
  roles          Role[]
  RolePermission RolePermission[]

  @@map("permissions")
}

model RolePermission {
  id           String @id @default(uuid())
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@map("role_permissions")
}

model User {
  id                String  @id @default(uuid())
  fullName          String
  email             String  @unique
  passwordHash      String
  profilePicUrl     String?
  isExternal        Boolean
  institutionalCode String? @unique
  roleId            String?

  role Role? @relation(fields: [roleId], references: [id])

  subscriptions Subscription[]
  createdEvents Event[]

  @@map("users")
}

model Event {
  id              String   @id @default(uuid())
  eventCode       String   @unique
  name            String
  idCreator       String
  description     String
  location        String?
  coverUrl        String?
  startDateTime   DateTime
  endDateTime     DateTime
  isRemote        Boolean
  isPublic        Boolean
  maxParticipants Int?

  creator       User           @relation(fields: [idCreator], references: [id])
  subscriptions Subscription[]

  @@map("events")
}

model Subscription {
  id      String             @id @default(uuid())
  idUser  String
  idEvent String
  status  SubscriptionStatus

  participant User  @relation(fields: [idUser], references: [id])
  event       Event @relation(fields: [idEvent], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}
