generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          String     @id @default(uuid())
  name        String
  description String
  roleUsers   RoleUser[]

  @@map("roles")
}

model RoleUser {
  id     String @id @default(uuid())
  idUser String
  idRole String
  user   User   @relation(fields: [idUser], references: [id])
  role   Role   @relation(fields: [idRole], references: [id])

  @@map("role_users")
}

model User {
  id                String         @id @default(uuid())
  fullName          String
  dateOfBirth       DateTime       @default(now())
  email             String         @unique
  passwordHash      String
  profilePicUrl     String?
  isExternal        Boolean
  institutionalCode String?
  Subscriptions     Subscription[]
  createdEvents     Event[]
  RoleUser          RoleUser[]

  @@map("users")
}

model Event {
  id              String         @id @default(uuid())
  name            String
  idCreator       String
  dateTime        DateTime
  location        String
  description     String
  maxParticipants Int
  eventCode       String         @unique
  isPublic        Boolean
  coverUrl        String?
  creator         User           @relation(fields: [idCreator], references: [id])
  Subscriptions   Subscription[]

  @@map("events")
}

model Subscription {
  id          String @id @default(uuid())
  idUser      String
  idEvent     String
  participant User   @relation(fields: [idUser], references: [id])
  event       Event  @relation(fields: [idEvent], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}
